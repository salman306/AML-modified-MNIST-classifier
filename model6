model6 = Sequential()
model6.add(Conv2D(30, (3, 3),activation='relu',input_shape=(64,64,1)))
model6.add(Conv2D(30, (3, 3),activation='relu',input_shape=(64,64,1)))
model6.add(MaxPooling2D(pool_size=(2,2)))
model6.add(Conv2D(60, (3, 3),activation='relu'))
model6.add(Conv2D(60, (3, 3),activation='relu'))
model6.add(MaxPooling2D(pool_size=(2,2)))
model6.add(Conv2D(120, (2, 2),activation='relu'))
model6.add(Conv2D(120, (2, 2),activation='relu'))
model6.add(MaxPooling2D(pool_size=(2,2)))
model6.add(Dropout(0.5))
model6.add(Flatten())
model6.add(Dense(300, activation='tanh'))
model6.add(Dropout(0.5))
model6.add(Dense(300, activation='tanh'))
model6.add(Dense(len(encodermapping),activation='sigmoid', use_bias = True))

model6.compile(loss = 'categorical_crossentropy', optimizer = 'adam', metrics = ['accuracy'])
